name: CI
on:
  workflow_dispatch:
    inputs:
      push-docker-image-to-harbor:
        description: 'Push Docker Image to Harbor'
        type: boolean
        default: false

  pull_request:
  push:
    branches:
      - main
jobs:
  tests:
    runs-on: ubuntu-latest
    name: Unit Tests
    steps:
    - name: Checkout repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Run tests
      run: |
        docker build --file Dockerfile --target test --tag scigateway-auth:test .
        docker run \
         --name scigateway-auth \
         scigateway-auth:test \
         pytest --config-file test/pytest.ini --cov scigateway_auth --cov-report xml test/ -v
        docker cp scigateway-auth:/app/coverage.xml coverage.xml

    - name: Upload code coverage report
      uses: codecov/codecov-action@eaaf4bedf32dbdc6b720b63067d99c4d77d6047d # v3.1.4

  linting:
    runs-on: ubuntu-latest
    name: Linting
    steps:
    - name: Checkout repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      with:
        python-version: '3.11'

    - name: Install Nox
      run: pip install nox==2024.10.9

    - name: Install Poetry
      run: pip install poetry==1.8.4

    - name: Run Nox lint session
      run: nox -s lint

  formatting:
    runs-on: ubuntu-latest
    name: Code Formatting
    steps:
    - name: Checkout repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      with:
        python-version: '3.11'

    - name: Install Nox
      run: pip install nox==2024.10.9

    - name: Install Poetry
      run: pip install poetry==1.8.4

    - name: Run Nox black session
      run: nox -s black

  safety:
    runs-on: ubuntu-latest
    name: Dependency Safety
    steps:
    - name: Checkout repo
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

    - name: Setup Python
      uses: actions/setup-python@0b93645e9fea7318ecaed2b359559ac225c90a2b # v5.3.0
      with:
        python-version: '3.11'

    - name: Install Nox
      run: pip install nox==2024.10.9

    - name: Run Nox safety session
      run: nox -s safety

  docker:
    needs: [tests, linting, formatting, safety]
    name: Docker
    runs-on: ubuntu-20.04
    env:
      PUSH_DOCKER_IMAGE_TO_HARBOR: ${{ inputs.push-docker-image-to-harbor != null && inputs.push-docker-image-to-harbor || 'false' }}
    steps:
    - name: Check out repo
      uses: actions/checkout@f43a0e5ff2bd294095638e18286ca9a3d1956744 # v3.5.2

    - name: Login to Harbor
      uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a # v2.1.0
      with:
        registry: harbor.stfc.ac.uk/datagateway
        username: ${{ secrets.HARBOR_USERNAME }}
        password: ${{ secrets.HARBOR_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5.7.0
      with:
        images: harbor.stfc.ac.uk/datagateway/scigateway-auth

    - name: ${{ fromJSON(env.PUSH_DOCKER_IMAGE_TO_HARBOR) && 'Build and push Docker image to Harbor' || 'Build Docker image' }}
      uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 # v4.0.0
      with:
        context: .
        push: ${{ fromJSON(env.PUSH_DOCKER_IMAGE_TO_HARBOR) }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        target: prod
